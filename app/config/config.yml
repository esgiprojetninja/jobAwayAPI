imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Nelmio CORS Configuration
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
        max_age: 3600
        hosts: []
        origin_regex: false

# FOSRest Configuration
fos_rest:
    body_listener: true
    format_listener:
        rules:
            - { path: '^/', priorities: ['json'], fallback_format: json, prefer_extension: false }
    param_fetcher_listener: true
    view:
        view_response_listener: true
        formats:
            json: true

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false # Version >=1.2 Possible values are: "BY_YEAR", "BY_YEAR_AND_MONTH", false

api_platform:
    title: 'JobAwayAPI'
    description: ''
    version: '1.0.0'
    name_converter: ~
    path_segment_name_generator: 'api_platform.path_segment_name_generator.underscore'
    eager_loading:
        enabled: true
        fetch_partial: false
        max_joins: 30
        force_eager: true
    enable_fos_user: true # Enable the FOSUserBundle integration.
    enable_nelmio_api_doc: true # Enable the Nelmio Api doc integration.
    enable_swagger: true # Enable the Swagger documentation and export.
    enable_swagger_ui: true # Enable Swagger ui.
    oauth:
        enabled: false
        clientId: ''
        clientSecret: ''
        type: 'oauth2'
        flow: 'application'
        tokenUrl: '/oauth/v2/token'
        authorizationUrl: '/oauth/v2/auth'
        scopes: []
    swagger:
        api_keys: []
    collection:
        order: 'ASC'
        order_parameter_name: 'order'
        pagination:
            enabled: true
            items_per_page: 30
            client_enabled: false
            client_items_per_page: false
            maximum_items_per_page: 30
            page_parameter_name: 'page'
            enabled_parameter_name: 'pagination'
            items_per_page_parameter_name: 'itemsPerPage'
    mapping:
        paths: []
    http_cache:
        etag: true
        max_age: 300000
        shared_max_age: 30000000
        vary: ['Accept']
        public: ~
        invalidation:
          enabled: false
          varnish_urls: []
    exception_to_status:
        Symfony\Component\Serializer\Exception\ExceptionInterface: 400
        ApiPlatform\Core\Exception\InvalidArgumentException: !php/const:Symfony\Component\HttpFoundation\Response::HTTP_BAD_REQUEST
    formats:
        jsonld:
            mime_types: ['application/ld+json']
        json:
            mime_types: ['application/json']
        html:
            mime_types: ['text/html']
    error_formats:
        jsonproblem:
            mime_types: ['application/problem+json']
        jsonld:
            mime_types: ['application/ld+json']
